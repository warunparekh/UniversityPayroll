@model UniversityPayroll.ViewModels.EmployeeProfileViewModel
@{
    ViewData["Title"] = "My Profile";
    var unpaidLeaves = ViewData["UnpaidLeaves"] as List<UniversityPayroll.Models.LeaveApplication> ?? new List<UniversityPayroll.Models.LeaveApplication>();
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-lg-2 bg-light sidebar">
            <div class="position-sticky">
                <h5 class="text-center py-3 border-bottom">
                    <i class="fas fa-user"></i> My Profile
                </h5>

                <div class="p-3">
                    <h6 class="text-muted mb-3">Leave Balance</h6>
                    @if (Model.LeaveBalance != null && Model.LeaveBalance.Entitlements != null)
                    {
                        @foreach (var kv in Model.LeaveBalance.Entitlements)
                        {
                            var type = kv.Key;
                            var left = Model.LeaveBalance.Balance?.GetValueOrDefault(type) ?? 0;
                            <div class="mb-2">
                                <small class="text-muted">@type</small>
                                <div class="fw-bold text-primary">@left days left</div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted small">No leave balance info</p>
                    }

                    <hr>

                    <h6 class="text-muted mb-3">Net Salary</h6>
                    @if (Model.SalarySlips != null && Model.SalarySlips.Any())
                    {
                        var latestSlip = Model.SalarySlips.OrderByDescending(s => s.Year).ThenByDescending(s => s.Month).First();
                        <div class="mb-2">
                            <small class="text-muted">Latest Net Pay</small>
                            <div class="fw-bold text-success">@latestSlip.NetPay.ToString("C")</div>
                        </div>
                        @if (latestSlip.UnpaidLeaveDeduction > 0)
                        {
                            <div class="mb-2">
                                <small class="text-muted">Unpaid Deduction</small>
                                <div class="fw-bold text-danger">@latestSlip.UnpaidLeaveDeduction.ToString("C")</div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted small">No payslip available</p>
                    }

                    <hr>

                    <h6 class="text-muted mb-3">Download Payslip</h6>
                    @{
                        var years = Model.SalarySlips?.Select(s => s.Year).Distinct().OrderByDescending(y => y).ToList() ?? new List<int>();
                    }
                    <div class="mb-2">
                        <select id="yearSelect" class="form-select form-select-sm mb-2">
                            <option value="">Select Year</option>
                            @foreach (var y in years)
                            {
                                <option value="@y">@y</option>
                            }
                        </select>
                        <select id="monthSelect" class="form-select form-select-sm mb-2">
                            <option value="">Select Month</option>
                            @for (int m = 1; m <= 12; m++)
                            {
                                <option value="@m">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                            }
                        </select>
                        <button type="button" class="btn btn-primary btn-sm w-100" id="downloadBtn">
                            <i class="fas fa-download"></i> Download
                        </button>
                        <div id="payslipMsg" class="small text-danger mt-1"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9 col-lg-10">
            @if (Model.Employee == null)
            {
                <div class="alert alert-danger">Profile not found.</div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h2>Leave Applications</h2>
                            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#leaveApplicationModal">
                                <i class="fas fa-plus"></i> Apply for Leave
                            </button>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h5><i class="fas fa-calendar-alt"></i> My Leave Applications</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Leave Type</th>
                                                <th>Start Date</th>
                                                <th>End Date</th>
                                                <th>Days</th>
                                                <th>Reason</th>
                                                <th>Status</th>
                                                <th>Comments</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.LeaveApplications != null && Model.LeaveApplications.Any())
                                            {
                                                @foreach (var leave in Model.LeaveApplications)
                                                {
                                                    <tr>
                                                        <td>
                                                            <span class="badge @(leave.LeaveType == "Unpaid" ? "bg-danger" : "bg-primary")">
                                                                @leave.LeaveType
                                                            </span>
                                                        </td>
                                                        <td>@leave.StartDate.ToString("dd/MM/yyyy")</td>
                                                        <td>@leave.EndDate.ToString("dd/MM/yyyy")</td>
                                                        <td>@leave.TotalDays</td>
                                                        <td>
                                                            <span class="d-inline-block text-truncate" style="max-width: 150px;" title="@leave.Reason">
                                                                @leave.Reason
                                                            </span>
                                                        </td>
                                                        <td>
                                                            @switch (leave.Status.ToLower())
                                                            {
                                                                case "pending":
                                                                    <span class="badge bg-warning text-dark">@leave.Status</span>
                                                                    break;
                                                                case "approved":
                                                                    <span class="badge bg-success">@leave.Status</span>
                                                                    break;
                                                                case "rejected":
                                                                    <span class="badge bg-danger">@leave.Status</span>
                                                                    break;
                                                                default:
                                                                    <span class="badge bg-secondary">@leave.Status</span>
                                                                    break;
                                                            }
                                                        </td>
                                                        <td>
                                                            <span class="d-inline-block text-truncate" style="max-width: 150px;" title="@leave.AdminComments">
                                                                @leave.AdminComments
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="7" class="text-center text-muted">No leave applications found.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="card mt-4">
                            <div class="card-header">
                                <h5><i class="fas fa-user-circle"></i> Personal Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <table class="table table-borderless">
                                            <tr>
                                                <td><strong>Employee Code:</strong></td>
                                                <td>@Model.Employee.EmployeeCode</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Name:</strong></td>
                                                <td>@Model.Employee.Name</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Designation:</strong></td>
                                                <td>@Model.Employee.Designation</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Base Salary:</strong></td>
                                                <td>@Model.Employee.BaseSalary.ToString("C")</td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Salary Structure</h6>
                                        @if (Model.SalaryStructure != null)
                                        {
                                            <ul class="list-unstyled">
                                                <li><strong>DA:</strong> @Model.SalaryStructure.Allowances?.DaPercent%</li>
                                                <li><strong>HRA:</strong> @Model.SalaryStructure.Allowances?.HraPercent%</li>
                                                @if (Model.SalaryStructure.Allowances?.OtherAllowances != null)
                                                {
                                                    @foreach (var o in Model.SalaryStructure.Allowances.OtherAllowances)
                                                    {
                                                        <li><strong>@o.Name:</strong> @o.Percent%</li>
                                                    }
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No salary structure information</span>
                                        }

                                        <h6 class="mt-3">Tax Information</h6>
                                        <p>@(Model.TaxSlab != null ? $"{Model.TaxSlab.FinancialYear} ({Model.TaxSlab.CessPercent}% cess)" : "N/A")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Leave Application Modal -->
<div class="modal fade" id="leaveApplicationModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-controller="Employee" asp-action="ApplyLeave" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Apply for Leave</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="LeaveType" class="form-label">Leave Type</label>
                            <select name="LeaveType" id="LeaveType" class="form-select" required>
                                <option value="">-- Select Leave Type --</option>
                                @if (Model.LeaveTypes != null)
                                {
                                    @foreach (var leaveType in Model.LeaveTypes)
                                    {
                                        <option value="@leaveType.Name">@leaveType.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Total Days</label>
                            <p id="totalDaysText" class="form-control-plaintext fw-bold">0</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="StartDate" class="form-label">Start Date</label>
                            <input name="StartDate" id="modalStartDate" class="form-control" type="date" required min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="EndDate" class="form-label">End Date</label>
                            <input name="EndDate" id="modalEndDate" class="form-control" type="date" required min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input name="IsHalfDay" id="modalHalfDayCheck" class="form-check-input" type="checkbox" />
                            <label class="form-check-label" for="modalHalfDayCheck">Half Day Leave</label>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="Reason" class="form-label">Reason</label>
                        <textarea name="Reason" class="form-control" rows="3" required maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit Application</button>
                </div>
            </form>
        </div>
    </div>
</div>


<style>
    .sidebar {
        min-height: calc(100vh - 56px);
    }
</style>

@section Scripts {
    <script>
        document.getElementById('downloadBtn').onclick = function () {
            var year = parseInt(document.getElementById('yearSelect').value);
            var month = parseInt(document.getElementById('monthSelect').value);
            if (!year || !month) {
                document.getElementById('payslipMsg').innerText = 'Select year and month.';
                return;
            }
            var slipList = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalarySlips));
            var found = slipList.find(s => s.Year === year && s.Month === month);
            if (found && found.PdfUrl) {
                window.open('/Admin/DownloadSlip?file=' + encodeURIComponent(found.PdfUrl.split('/').pop()), '_blank');
                document.getElementById('payslipMsg').innerText = '';
            } else {
                document.getElementById('payslipMsg').innerText = 'Payslip not found for selected period.';
            }
        };

        document.addEventListener('DOMContentLoaded', function () {
            const startDateInput = document.getElementById('modalStartDate');
            const endDateInput = document.getElementById('modalEndDate');
            const totalDaysText = document.getElementById('totalDaysText');
            const halfDayCheck = document.getElementById('modalHalfDayCheck');

            function calculateDays() {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);
                const isHalfDay = halfDayCheck.checked;

                if (startDateInput.value && endDateInput.value && endDate >= startDate) {
                    if (isHalfDay) {
                        totalDaysText.textContent = '0.5';
                        endDateInput.value = startDateInput.value;
                        endDateInput.disabled = true;
                    } else {
                        endDateInput.disabled = false;
                        let workingDays = 0;
                        for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
                            if (d.getDay() !== 0) { // 0 is Sunday
                                workingDays++;
                            }
                        }
                        totalDaysText.textContent = workingDays;
                    }
                } else {
                    totalDaysText.textContent = '0';
                }
            }

            function updateEndDateMin() {
                endDateInput.min = startDateInput.value;
                if (new Date(endDateInput.value) < new Date(startDateInput.value)) {
                    endDateInput.value = startDateInput.value;
                }
                calculateDays();
            }

            startDateInput.addEventListener('change', updateEndDateMin);
            endDateInput.addEventListener('change', calculateDays);
            halfDayCheck.addEventListener('change', calculateDays);

            calculateDays();
        });
    </script>
}