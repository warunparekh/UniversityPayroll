@model UniversityPayroll.ViewModels.EmployeeProfileViewModel
@{
    ViewData["Title"] = "My Profile";
    var unpaidLeaves = ViewData["UnpaidLeaves"] as List<UniversityPayroll.Models.LeaveApplication> ?? new List<UniversityPayroll.Models.LeaveApplication>();
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3 col-lg-2 bg-light sidebar">
            <div class="position-sticky">
                <h5 class="text-center py-3 border-bottom">
                    <i class="fas fa-user"></i> My Profile
                </h5>

                <div class="p-3">
                    <h6 class="text-muted mb-3">Leave Balance</h6>
                    @if (Model.LeaveBalance != null && Model.LeaveBalance.Entitlements != null)
                    {
                        @foreach (var kv in Model.LeaveBalance.Entitlements)
                        {
                            var type = kv.Key;
                            var left = Model.LeaveBalance.Balance?.GetValueOrDefault(type) ?? 0;
                            <div class="mb-2">
                                <small class="text-muted">@type</small>
                                <div class="fw-bold text-primary">@left days left</div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted small">No leave balance info</p>
                    }

                    <hr>

                    <h6 class="text-muted mb-3">Net Salary</h6>
                    @if (Model.SalarySlips != null && Model.SalarySlips.Any())
                    {
                        var latestSlip = Model.SalarySlips.OrderByDescending(s => s.Year).ThenByDescending(s => s.Month).First();
                        <div class="mb-2">
                            <small class="text-muted">Latest Net Pay</small>
                            <div class="fw-bold text-success">@latestSlip.NetPay.ToString("C")</div>
                        </div>
                        @if (latestSlip.UnpaidLeaveDeduction > 0)
                        {
                            <div class="mb-2">
                                <small class="text-muted">Unpaid Deduction</small>
                                <div class="fw-bold text-danger">@latestSlip.UnpaidLeaveDeduction.ToString("C")</div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted small">No payslip available</p>
                    }

                    <hr>

                    <h6 class="text-muted mb-3">Download Payslip</h6>
                    @{
                        var years = Model.SalarySlips?.Select(s => s.Year).Distinct().OrderByDescending(y => y).ToList() ?? new List<int>();
                    }
                    <div class="mb-2">
                        <select id="yearSelect" class="form-select form-select-sm mb-2">
                            <option value="">Select Year</option>
                            @foreach (var y in years)
                            {
                                <option value="@y">@y</option>
                            }
                        </select>
                        <select id="monthSelect" class="form-select form-select-sm mb-2">
                            <option value="">Select Month</option>
                            @for (int m = 1; m <= 12; m++)
                            {
                                <option value="@m">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                            }
                        </select>
                        <button type="button" class="btn btn-primary btn-sm w-100" id="downloadBtn">
                            <i class="fas fa-download"></i> Download
                        </button>
                        <div id="payslipMsg" class="small text-danger mt-1"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9 col-lg-10">
            @if (Model.Employee == null)
            {
                <div class="alert alert-danger">Profile not found.</div>
            }
            else
            {
                <div class="row">
                    <div class="col-12">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h2>Leave Applications</h2>
                            <a asp-controller="Leave" asp-action="Create" class="btn btn-success">
                                <i class="fas fa-plus"></i> Apply for Leave
                            </a>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h5><i class="fas fa-calendar-alt"></i> My Leave Applications</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Leave Type</th>
                                                <th>Start Date</th>
                                                <th>End Date</th>
                                                <th>Days</th>
                                                <th>Reason</th>
                                                <th>Status</th>
                                                <th>Comments</th>
                                            </tr>
                                        </thead>
                                        <tbody id="leaveApplicationsTable">
                                            <tr>
                                                <td colspan="7" class="text-center">Loading...</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="card mt-4">
                            <div class="card-header">
                                <h5><i class="fas fa-user-circle"></i> Personal Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <table class="table table-borderless">
                                            <tr>
                                                <td><strong>Employee Code:</strong></td>
                                                <td>@Model.Employee.EmployeeCode</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Name:</strong></td>
                                                <td>@Model.Employee.Name</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Designation:</strong></td>
                                                <td>@Model.Employee.Designation</td>
                                            </tr>
                                            <tr>
                                                <td><strong>Base Salary:</strong></td>
                                                <td>@Model.Employee.BaseSalary.ToString("C")</td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Salary Structure</h6>
                                        @if (Model.SalaryStructure != null)
                                        {
                                            <ul class="list-unstyled">
                                                <li><strong>DA:</strong> @Model.SalaryStructure.Allowances?.DaPercent%</li>
                                                <li><strong>HRA:</strong> @Model.SalaryStructure.Allowances?.HraPercent%</li>
                                                @if (Model.SalaryStructure.Allowances?.OtherAllowances != null)
                                                {
                                                    @foreach (var o in Model.SalaryStructure.Allowances.OtherAllowances)
                                                    {
                                                        <li><strong>@o.Name:</strong> @o.Percent%</li>
                                                    }
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No salary structure information</span>
                                        }

                                        <h6 class="mt-3">Tax Information</h6>
                                        <p>@(Model.TaxSlab != null ? $"{Model.TaxSlab.FinancialYear} ({Model.TaxSlab.CessPercent}% cess)" : "N/A")</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .sidebar {
        min-height: calc(100vh - 56px);
    }
</style>

@section Scripts {
    <script>
        document.getElementById('downloadBtn').onclick = function () {
            var year = parseInt(document.getElementById('yearSelect').value);
            var month = parseInt(document.getElementById('monthSelect').value);
            if (!year || !month) {
                document.getElementById('payslipMsg').innerText = 'Select year and month.';
                return;
            }
            var slipList = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalarySlips));
            var found = slipList.find(s => s.Year === year && s.Month === month);
            if (found && found.PdfUrl) {
                window.open('/Admin/DownloadSlip?file=' + encodeURIComponent(found.PdfUrl.split('/').pop()), '_blank');
                document.getElementById('payslipMsg').innerText = '';
            } else {
                document.getElementById('payslipMsg').innerText = 'Payslip not found for selected period.';
            }
        };

        fetch('/Leave/Index')
            .then(response => response.text())
            .then(html => {
                var parser = new DOMParser();
                var doc = parser.parseFromString(html, 'text/html');
                var tableRows = doc.querySelectorAll('.table tbody tr');
                var tableHtml = '';

                if (tableRows.length > 0) {
                    tableRows.forEach(function(row) {
                        var cells = row.querySelectorAll('td');
                        if (cells.length >= 7) {
                            tableHtml += '<tr>';
                            for (var i = 0; i < 7; i++) {
                                if (i === 6) {
                                    tableHtml += '<td>' + (cells[cells.length - 1].textContent.trim() || '-') + '</td>';
                                } else {
                                    tableHtml += '<td>' + cells[i].innerHTML + '</td>';
                                }
                            }
                            tableHtml += '</tr>';
                        }
                    });
                }

                if (tableHtml) {
                    document.getElementById('leaveApplicationsTable').innerHTML = tableHtml;
                } else {
                    document.getElementById('leaveApplicationsTable').innerHTML = '<tr><td colspan="7" class="text-center text-muted">No leave applications found</td></tr>';
                }
            })
            .catch(error => {
                document.getElementById('leaveApplicationsTable').innerHTML = '<tr><td colspan="7" class="text-center text-danger">Error loading leave applications</td></tr>';
            });
    </script>
}